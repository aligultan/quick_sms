import UIKit

class MessageViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {

    @IBOutlet weak var tableView: UITableView!

    var selectedCategory: String?
    var messagesToShow: [String] = []

    // Sabit mesaj ≈üablonlarƒ±
    let messageTemplates: [String: [String]] = [
        "Doƒüum G√ºn√º": ["Nice mutlu yƒ±llara! üéâ", "Yeni ya≈üƒ±n saƒülƒ±k ve mutluluk getirsin!", "Doƒüum g√ºn√ºn kutlu olsun! üéÇ"],
        "Yeni ƒ∞≈ü": ["Yeni i≈üinde ba≈üarƒ±lar dilerim!", "Ba≈üarƒ± dolu bir kariyer dilerim!", "Yeni i≈üin hayƒ±rlƒ± olsun! üëî"],
        "Yƒ±ld√∂n√ºm√º": ["Mutluluƒüunuz daim olsun!", "Nice yƒ±llara birlikte!", "Yƒ±ld√∂n√ºm√ºn√ºz kutlu olsun! ‚ù§Ô∏è"],
        "Tebrik": ["Tebrik ederim, harikasƒ±n! üéâ", "Ba≈üarƒ±nƒ± kutluyorum!", "Bravo, √ßok g√ºzel haber! üëè"],
        "√ñzel G√ºn": ["Bug√ºn√ºn senin i√ßin √∂zel olmasƒ±nƒ± dilerim!", "Harika bir g√ºn ge√ßir!", "√ñzel g√ºnlerin hep mutlu ge√ßsin!"],
        "ƒ∞yi Dilek": ["Her ≈üey g√∂nl√ºnce olsun!", "Bol ≈üans! üçÄ", "ƒ∞yi g√ºnler dilerim! ‚òÄÔ∏è"],
        "Sevgililer G√ºn√º": ["Seni seviyorum! ‚ù§Ô∏è", "Birlikte nice g√ºzel yƒ±llara! üíñ", "Sevgililer g√ºn√ºn kutlu olsun! üåπ"],
        "Anneler G√ºn√º": ["Anneler g√ºn√ºn kutlu olsun! üë©‚Äçüëß‚Äçüë¶", "En g√ºzel g√ºnler senin olsun anne! üå∏", "Her zaman yanƒ±ndayƒ±m canƒ±m annem! ‚ù§Ô∏è"],
        "Babalar G√ºn√º": ["Babalar g√ºn√ºn kutlu olsun! üë®‚Äçüëß", "ƒ∞yi ki varsƒ±n baba! üéâ", "Saƒülƒ±k ve mutluluk dolu bir yƒ±l dilerim baba!"],
        "Ge√ßmi≈ü Olsun": ["Ge√ßmi≈ü olsun, acil ≈üifalar dilerim! üôè", "Umarƒ±m en kƒ±sa s√ºrede iyile≈üirsin! üåø", "Her ≈üey yoluna girecek! üòä"],
        "Ba≈üsaƒülƒ±ƒüƒ±": ["Ba≈üƒ±nƒ±z saƒü olsun. üôè", "Allah sabƒ±r versin.", "Acƒ±nƒ±zƒ± payla≈üƒ±yorum."],
        "Kandil Mesajƒ±": ["Kandiliniz m√ºbarek olsun. üåô", "Hayƒ±rlƒ± kandiller dilerim.", "Dualarƒ±nƒ±z kabul olsun."],
        "√ñƒüretmenler G√ºn√º": ["√ñƒüretmenler g√ºn√ºn√ºz kutlu olsun! üë©‚Äçüè´", "Bize kattƒ±klarƒ±nƒ±z i√ßin te≈üekk√ºrler!", "ƒ∞yi ki varsƒ±nƒ±z hocam! üåü"],
        "Yeni Yƒ±l Kutlamasƒ±": ["Mutlu Yƒ±llar! üéâ", "Yeni yƒ±lƒ±n saƒülƒ±k ve ba≈üarƒ± getirsin! üéÜ", "Harika bir yƒ±l seni bekliyor! üéä"],
        "Ho≈ü Geldin Bebek": ["Aramƒ±za ho≈ü geldin minik! üë∂", "Yeni ailenizle mutluluklar dilerim!", "D√ºnyaya ho≈ü geldin k√º√ß√ºk melek!"],
        "Evlenme Tebriƒüi": ["Mutluluƒüunuz daim olsun! üíç", "Bir √∂m√ºr boyu mutluluklar! üéâ", "Harika bir √ßift oldunuz! ‚ù§Ô∏è"],
        "Mezuniyet Kutlamasƒ±": ["Mezuniyetini tebrik ederim! üéì", "Ba≈üarƒ±larƒ±nƒ±n devamƒ±nƒ± dilerim! üåü", "Hayatƒ±n boyunca ba≈üarƒ±lar! üéâ"]
    ]


    override func viewDidLoad() {
        super.viewDidLoad()

        tableView.delegate = self
        tableView.dataSource = self

        if let category = selectedCategory {
            self.title = category
            loadMessages()

            if messagesToShow.isEmpty {
                messagesToShow = messageTemplates[category] ?? []
            }
        }
    }

    @IBAction func addMessageTapped(_ sender: UIBarButtonItem) {
        let alert = UIAlertController(title: "Yeni Mesaj", message: "Mesaj i√ßeriƒüini girin", preferredStyle: .alert)
        
        alert.addTextField { textField in
            textField.placeholder = "Mesaj..."
        }

        let addAction = UIAlertAction(title: "Ekle", style: .default) { _ in
            if let message = alert.textFields?.first?.text, !message.isEmpty {
                self.messagesToShow.append(message)
                self.tableView.reloadData()
                self.saveMessages()
            }
        }

        let cancelAction = UIAlertAction(title: "ƒ∞ptal", style: .cancel, handler: nil)
        alert.addAction(addAction)
        alert.addAction(cancelAction)

        // ƒ∞lk √∂nce Alert'i sunuyoruz.
        self.present(alert, animated: true) {
            // Daha sonra TextField'ƒ± aktif hale getiriyoruz.
            if let textField = alert.textFields?.first {
                textField.becomeFirstResponder()
            }
        }
    }




    // TableView Fonksiyonlarƒ±
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return messagesToShow.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "messageCell", for: indexPath)
        cell.textLabel?.text = messagesToShow[indexPath.row]
        return cell
    }

    // Kayƒ±t Fonksiyonlarƒ±
    func saveMessages() {
        if let category = selectedCategory {
            UserDefaults.standard.set(messagesToShow, forKey: "messages_\(category)")
        }
    }

    func loadMessages() {
        if let category = selectedCategory,
           let savedMessages = UserDefaults.standard.array(forKey: "messages_\(category)") as? [String] {
            messagesToShow = savedMessages
        }
    }

    // Mesajƒ± silmek i√ßin kaydƒ±rma i≈ülemi
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            messagesToShow.remove(at: indexPath.row)
            saveMessages()
            tableView.deleteRows(at: [indexPath], with: .automatic)
        }
    }

    // Mesajƒ± tƒ±klayƒ±nca payla≈ü veya g√ºncelle se√ßeneƒüi sun
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let selectedMessage = messagesToShow[indexPath.row]
        
        let alert = UIAlertController(title: "Se√ßenekler", message: "Bir i≈ülem se√ßin:", preferredStyle: .actionSheet)
        
        // ‚úÖ G√ºncelle Butonu
        let updateAction = UIAlertAction(title: "‚úèÔ∏è Mesajƒ± G√ºncelle", style: .default) { _ in
            let updateAlert = UIAlertController(title: "Mesajƒ± G√ºncelle", message: "Yeni i√ßeriƒüi girin", preferredStyle: .alert)
            updateAlert.addTextField { textField in
                textField.text = selectedMessage
            }
            
            let saveAction = UIAlertAction(title: "Kaydet", style: .default) { _ in
                if let updatedMessage = updateAlert.textFields?.first?.text, !updatedMessage.isEmpty {
                    self.messagesToShow[indexPath.row] = updatedMessage
                    self.tableView.reloadData()
                    self.saveMessages()
                }
            }
            
            updateAlert.addAction(saveAction)
            updateAlert.addAction(UIAlertAction(title: "ƒ∞ptal", style: .cancel, handler: nil))
            self.present(updateAlert, animated: true, completion: nil)
        }
        
        // ‚úÖ WhatsApp ile Payla≈ü
        let whatsappAction = UIAlertAction(title: "üì± WhatsApp ile Payla≈ü", style: .default) { _ in
            let urlString = "whatsapp://send?text=\(selectedMessage.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? "")"
            if let url = URL(string: urlString), UIApplication.shared.canOpenURL(url) {
                UIApplication.shared.open(url)
            } else {
                self.showAlert(title: "Hata", message: "WhatsApp y√ºkl√º deƒüil.")
            }
        }
        
        // ‚úÖ Payla≈üƒ±m (Genel)
        let shareAction = UIAlertAction(title: "üì§ Diƒüer Uygulamalarla Payla≈ü", style: .default) { _ in
            let activityVC = UIActivityViewController(activityItems: [selectedMessage], applicationActivities: nil)
            self.present(activityVC, animated: true, completion: nil)
        }
        
        let cancelAction = UIAlertAction(title: "ƒ∞ptal", style: .cancel, handler: nil)
        
        // Eylemleri ekle
        alert.addAction(updateAction)
        alert.addAction(whatsappAction)
        alert.addAction(shareAction)
        alert.addAction(cancelAction)
        
        self.present(alert, animated: true, completion: nil)
    }

    func showAlert(title: String, message: String) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Tamam", style: .default, handler: nil))
        self.present(alert, animated: true, completion: nil)
    }


}

